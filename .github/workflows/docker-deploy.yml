name: Docker Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./src/Ecom.Users.API/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/ecom-users-api:latest
          ghcr.io/${{ github.repository_owner }}/ecom-users-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy with Docker
      run: |
        # Stop and remove existing container if it exists
        docker stop ecom-users-api || true
        docker rm ecom-users-api || true

        # Pull the latest image
        docker pull ghcr.io/${{ github.repository_owner }}/ecom-users-api:latest

        # Run the container with the specified port
        docker run -d \
          --name ecom-users-api \
          -p 5502:80 \
          -e ASPNETCORE_ENVIRONMENT=Production \
          --restart always \
          ghcr.io/${{ github.repository_owner }}/ecom-users-api:latest
        
    - name: Verify deployment
      run: |
        # Wait for service to start
        sleep 15
        
        # Check if the service is running
        if docker ps | grep ecom-users-api; then
          echo "Service is running successfully"
          # Check if the port is accessible
          if curl -s http://localhost:5502/health || curl -s http://localhost:5502/healthz; then
            echo "Service is responding on port 5502"
          else
            echo "Service is not responding on port 5502"
            exit 1
          fi
        else
          echo "Service failed to start"
          exit 1
        fi
          exit 1
        fi
